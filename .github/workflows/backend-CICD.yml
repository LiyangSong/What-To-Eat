name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - "main"
    paths:
      - "wte-backend/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./wte-backend
          file: ./wte-backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/wte-backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to EC2
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.EC2_HOST_DNS }}
          REMOTE_USER: ${{ secrets.EC2_USERNAME }}
          TARGET: ${{ secrets.EC2_TARGET_DIR_BACKEND }}
      - name: Run Docker commands on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST_DNS }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/wte-backend:latest
            docker stop wte-backend || true
            docker rm wte-backend || true
            docker run \
              --name wte-backend \
              -p 8080:8080 \
              -e db_url=${{ secrets.DB_URL }} \
              -e db_username=${{ secrets.DB_USERNAME }} \
              -e db_password=${{ secrets.DB_PASSWORD }} \
              -e jwt_secret=${{ secrets.JWT_SECRET }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/wte-backend:latest